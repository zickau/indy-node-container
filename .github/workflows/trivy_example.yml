name: Trivy Example

on:
  workflow_dispatch:

jobs:
  build:
    name: trivy_scan
    runs-on: ubuntu-18.04
    steps:
      #- name: Checkout code
      #  uses: actions/checkout@v2
      
      #- name: Build an image from Dockerfile
      #  run: |
      #    docker build -t docker.io/zickau/indy-node-container/build/Dockerfile.ubuntu18 .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/idunion/indy-node-container/indy_node:latest-ubuntu18'
          scan-type: 'image'
          ignore-unfixed: true
          format: json
          output: 'results.json'
          # Ignoring the go.sum file as it may contain the older dependencies entries which are not being used now.
          skip-dirs: 'go.sum'

      - name: Read file contents
        id: read_file
        uses: andstor/file-reader-action@v1.0.0
        with:
          path: "results.json"
      
      - name: Create Issues Summary
        run: |
          summary=$(jq '.Results | .[] | .Vulnerabilities | first(.[] | select(.Severity=="HIGH")) | .VulnerabilityID' results.json)
          if [ -z $summary ]
          then
            summary="0 Issues"
          fi
          echo "SUMMARY=$summary" >> $GITHUB_ENV

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": ${{ env.SUMMARY }},
              "blocks": ${{ env.SUMMARY }}
            }
        env:
           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }},
           SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
