name: Trivy Example

on:
  schedule:
    # run every Wednesday at 23:20
    - cron: '20 23 * * 3'
  workflow_dispatch:

jobs:
  workflow_setup:
    name: Setup variables 
    runs-on: ubuntu-latest
    outputs:
      repo_owner: ${{ steps.repo_owner.outputs.lowercase }}
      os_matrix: "{\"os_version\":[\"bullseye\",\"buster\",\"ubuntu16\",\"ubuntu18\",\"ubuntu20\"]}"
    steps:
      - name: Lowercase repo owner
        id: repo_owner
        run: echo "::set-output name=lowercase::$(echo ${{ github.repository_owner }} | tr \"[:upper:]\" \"[:lower:]\")"
        shell: bash

  trivy_analysis:
    name: Trivy Analysis of Indy Node Images
    runs-on: "ubuntu-20.04"
    needs: workflow_setup
    strategy:
      matrix:
        os_version: [ bullseye, buster, ubuntu16, ubuntu18, ubuntu20 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  #build:
    #name: trivy_scan
    #runs-on: ubuntu-18.04
    #steps:
      #- name: Checkout code
      #  uses: actions/checkout@v2
      
      #- name: Build an image from Dockerfile
      #  run: |
      #    docker build -t docker.io/zickau/indy-node-container/build/Dockerfile.ubuntu18 .
      
      - name: Run Trivy vulnerability scanner for Slack messages on indy_node:${{ matrix.os_version }}
        uses: aquasecurity/trivy-action@master
        with:
          #image-ref: 'ghcr.io/idunion/indy-node-container/indy_node:latest-ubuntu18'
          image-ref: 'ghcr.io/${{ needs.workflow_setup.outputs.repo_owner }}/indy-node-container/indy_node:latest-${{ matrix.os_version }}'
          scan-type: 'image'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          format: json
          #output: 'results.json'
          output: 'trivy-indy-node-${{ matrix.os_version }}.json'
          # Ignoring the go.sum file as it may contain the older dependencies entries which are not being used now.
          skip-dirs: 'go.sum'

      #- name: Read file contents
        #id: read_file
        #uses: andstor/file-reader-action@v1.0.0
        #with:
        #  path: "trivy-indy-node-${{ matrix.os_version }}.json"
      
      #- name: Patch tool name for ${{ matrix.os_version }} scan
       # run: |
        #  sed -i 's/"name": "Trivy",/"name": "Trivy${{ matrix.os_version }}Latest",/g' trivy-indy-node-${{ matrix.os_version }}.json

      - name: 'Safe trivy-indy-node-${{ matrix.os_version }}.json'
        uses: actions/upload-artifact@v2
        with:
          name: trivy-indy-node-${{ matrix.os_version }}.json
          path: trivy-indy-node-${{ matrix.os_version }}.json
          retention-days: 8
      
      - name: Create Issues Summary
        run: |
          summary-${{ matrix.os_version }}=$(jq -jr '.Results | .[] | .Vulnerabilities | .[] | select(.Severity=="HIGH" or .Severity=="CRITICAL") | .VulnerabilityID' trivy-indy-node-${{ matrix.os_version }}.json)
          if [ -z $summary-${{ matrix.os_version }} ]
          then
            summary="0 Issues"
          fi
          echo "SUMMARY-${{ matrix.os_version }}=$summary-${{ matrix.os_version }}" >> $GITHUB_ENV

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": "CVE found: ",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*CVEs (HIGH,CRITICAL) found in ${{ matrix.os_version }}: "
                }
              },
              {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ env.SUMMARY-${{ matrix.os_version }} }}"
                }
              }
            ]
            }
        env:
           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_SZ }}
           SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
