name: Trivy Example

on:
  workflow_dispatch:

jobs:
  build:
    name: trivy_scan
    runs-on: ubuntu-18.04
    steps:
      #- name: Checkout code
      #  uses: actions/checkout@v2
      
      #- name: Build an image from Dockerfile
      #  run: |
      #    docker build -t docker.io/zickau/indy-node-container/build/Dockerfile.ubuntu18 .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/idunion/indy-node-container/indy_node:latest-ubuntu18'
          scan-type: 'fs'
          format: 'json'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          output: 'results.json'

      - name: Create Issues Summary
        run: |
          summary=$(jq '.[] | select(.Vulnerabilities) | .Vulnerabilities | group_by(.Severity) | map({Severity: .[0].Severity, Count: length}) | tostring' results.json | tr -d \\)
          if [ -z $summary ]
          then
            summary="0 Issues"
          fi
          echo "SUMMARY=$summary" >> $GITHUB_ENV

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          slack-message: "Trivy Scan Summary is: ${{ env.SUMMARY }} "
        env:
           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
           SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
